parameter_meta:
  proteomicslfq.samplesheet:
    description: URI/path to an [SDRF](https://github.com/bigbio/proteomics-metadata-standard/tree/master/annotated-projects)
      file **OR** globbing pattern for URIs/paths of mzML or Thermo RAW files
    group: input_output_options
    help: "The input to the pipeline can be specified in two **mutually exclusive**\
      \ ways:\n  - using a path or URI to a PRIDE Sample to Data Relation Format file\
      \ (SDRF), e.g. as part of a submitted and\nannotated PRIDE experiment (see [here](https://github.com/bigbio/proteomics-metadata-standard/tree/master/annotated-projects)\
      \ for examples). Input files will be downloaded and cached from the URIs specified\
      \ in the SDRF file.\nAn OpenMS-style experimental design will be generated based\
      \ on the factor columns of the SDRF. The settings for the\nfollowing parameters\
      \ will currently be overwritten by the ones specified in the SDRF:\n\n    *\
      \ `fixed_mods`,\n    * `variable_mods`,\n    * `precursor_mass_tolerance`,\n\
      \    * `precursor_mass_tolerance_unit`,\n    * `fragment_mass_tolerance`,\n\
      \    * `fragment_mass_tolerance_unit`,\n    * `fragment_method`,\n    * `enzyme`\n\
      \  - by specifying globbing patterns to the input spectrum files in Thermo RAW\
      \ or mzML format (e.g. `/data/experiment{1,2,3}_rep*.mzML`). An experimental\
      \ design should be provided with the `expdesign` parameter."
    hidden: false
  proteomicslfq.outdir:
    description: The output directory where the results will be saved.
    group: input_output_options
    help: ''
    hidden: false
  proteomicslfq.email:
    description: Email address for completion summary.
    group: input_output_options
    help: Set this parameter to your e-mail address to get a summary e-mail with details
      of the run sent to you when the workflow exits. If set in your user config file
      (`~/.nextflow/config`) then you don't need to specify this on the command line
      for every run.
    hidden: false
  proteomicslfq.help:
    description: Display help text.
    group: generic_options
    help: ''
    hidden: true
  proteomicslfq.publish_dir_mode:
    description: Method used to save pipeline results to output directory.
    group: generic_options
    help: The Nextflow `publishDir` option specifies which intermediate files should
      be saved to the output directory. This option tells the pipeline what method
      should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir)
      for details.
    hidden: true
  proteomicslfq.name:
    description: Workflow name.
    group: generic_options
    help: A custom name for the pipeline run. Unlike the core nextflow `-name` option
      with one hyphen this parameter can be reused multiple times, for example if
      using `-resume`. Passed through to steps such as MultiQC and used for things
      like report filenames and titles.
    hidden: true
  proteomicslfq.email_on_fail:
    description: Email address for completion summary, only when pipeline fails.
    group: generic_options
    help: This works exactly as with `--email`, except emails are only sent if the
      workflow is not successful.
    hidden: true
  proteomicslfq.plaintext_email:
    description: Send plain-text email instead of HTML.
    group: generic_options
    help: Set to receive plain-text e-mails instead of HTML formatted.
    hidden: true
  proteomicslfq.max_multiqc_email_size:
    description: File size limit when attaching QC reports to summary emails.
    group: generic_options
    help: If file generated by pipeline exceeds the threshold, it will not be attached.
    hidden: true
  proteomicslfq.monochrome_logs:
    description: Do not use coloured log outputs.
    group: generic_options
    help: Set to disable colourful command line output and live life in monochrome.
    hidden: true
  proteomicslfq.tracedir:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: generic_options
    help: ''
    hidden: true
  proteomicslfq.max_cpus:
    description: Maximum number of CPUs that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the CPU requirement for each process. Should
      be an integer e.g. `--max_cpus 1`
    hidden: true
  proteomicslfq.max_memory:
    description: Maximum amount of memory that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the memory requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_memory '8.GB'`
    hidden: true
  proteomicslfq.max_time:
    description: Maximum amount of time that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the time requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_time '2.h'`
    hidden: true
  proteomicslfq.custom_config_version:
    description: Git commit id for Institutional configs.
    group: institutional_config_options
    help: 'Provide git commit id for custom Institutional configs hosted at `nf-core/configs`.
      This was implemented for reproducibility purposes. Default: `master`.


      ```bash

      ## Download and use config file with following git commit id

      --custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96

      ```'
    hidden: true
  proteomicslfq.custom_config_base:
    description: Base directory for Institutional configs.
    group: institutional_config_options
    help: 'If you''re running offline, nextflow will not be able to fetch the institutional
      config files from the internet. If you don''t need them, then this is not a
      problem. If you do need them, you should download the files from the repo and
      tell nextflow where to find them with the `custom_config_base` option. For example:


      ```bash

      ## Download and unzip the config files

      cd /path/to/my/configs

      wget https://github.com/nf-core/configs/archive/master.zip

      unzip master.zip


      ## Run the pipeline

      cd /path/to/my/data

      nextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/

      ```


      > Note that the nf-core/tools helper package has a `download` command to download
      all required pipeline files + singularity containers + institutional configs
      in one go for you, to make this process easier.'
    hidden: true
  proteomicslfq.hostnames:
    description: Institutional configs hostname.
    group: institutional_config_options
    help: ''
    hidden: true
  proteomicslfq.config_profile_description:
    description: Institutional config description.
    group: institutional_config_options
    help: ''
    hidden: true
  proteomicslfq.config_profile_contact:
    description: Institutional config contact information.
    group: institutional_config_options
    help: ''
    hidden: true
  proteomicslfq.config_profile_url:
    description: Institutional config URL link.
    group: institutional_config_options
    help: ''
    hidden: true
  proteomicslfq.root_folder:
    description: Root folder in which the spectrum files specified in the SDRF are
      searched
    group: main_parameters__sdrf_
    help: 'This optional parameter can be used to specify a root folder in which the
      spectrum files specified in the SDRF are searched.

      It is usually used if you have a local version of the experiment already. Note
      that this option does not support recursive

      searching yet.'
    hidden: false
  proteomicslfq.local_input_type:
    description: Overwrite the file type/extension of the filename as specified in
      the SDRF
    group: main_parameters__sdrf_
    help: 'If the above [`--root_folder`](#params_root_folder) was given to load local
      input files, this overwrites the file type/extension of

      the filename as specified in the SDRF. Usually used in case you have an mzML-converted
      version of the files already. Needs to be

      one of ''mzML'' or ''raw'' (the letter cases should match your files exactly).'
    hidden: false
  proteomicslfq.expdesign:
    description: A tab-separated experimental design file in OpenMS' own format (TODO
      link). All input files need to be present as a row with exactly the same names.
      If no design is given, unrelated, unfractionated runs are assumed.
    group: main_parameters__spectra_files_
    help: ''
    hidden: false
  proteomicslfq.database:
    description: The `fasta` protein database used during database search.
    group: protein_database
    help: 'Since the database is not included in an SDRF, this parameter always needs
      to be given to specify the input protein database

      when you run the pipeline. Remember to include contaminants (and decoys if not
      added in the pipeline with \-\-add-decoys)


      ```bash

      --database ''[path to Fasta protein database]''

      ```'
    hidden: false
  proteomicslfq.add_decoys:
    description: Generate and append decoys to the given protein database
    group: protein_database
    help: 'If decoys were not yet included in the input database, they have to be
      appended by OpenMS DecoyGenerator by adding this flag (TODO allow specifying
      type).

      Default: pseudo-reverse peptides'
    hidden: false
  proteomicslfq.decoy_affix:
    description: Pre- or suffix of decoy proteins in their accession
    group: protein_database
    help: "If [`--add-decoys`](#params_add_decoys) was set, this setting is used during\
      \ generation and passed to all tools that need decoy information.\n If decoys\
      \ were appended to the database externally, this setting needs to match the\
      \ used affix. (While OpenMS tools can infer the affix automatically, some thirdparty\
      \ tools might not.)\nTypical values are 'rev', 'decoy', 'dec'. Look for them\
      \ in your database."
    hidden: false
  proteomicslfq.affix_type:
    description: Location of the decoy marker string in the fasta accession. Before
      (prefix) or after (suffix)
    group: protein_database
    help: Prefix is highly recommended. Only in case an external tool marked decoys
      with a suffix, e.g. `sp|Q12345|ProteinA_DECOY` change this parameter to suffix.
    hidden: false
  proteomicslfq.openms_peakpicking:
    description: Activate OpenMS-internal peak picking
    group: spectrum_preprocessing
    help: Activate OpenMS-internal peak picking with the tool PeakPickerHiRes. Skips
      already picked spectra.
    hidden: false
  proteomicslfq.peakpicking_inmemory:
    description: Perform peakpicking in memory
    group: spectrum_preprocessing
    help: Perform peakpicking in memory. Use only if problems occur.
    hidden: false
  proteomicslfq.peakpicking_ms_levels:
    description: Which MS levels to pick as comma separated list. Leave empty for
      auto-detection.
    group: spectrum_preprocessing
    help: Which MS levels to pick as comma separated list, e.g. `--peakpicking_ms_levels
      1,2`. Leave empty for auto-detection.
    hidden: false
  proteomicslfq.search_engines:
    description: 'A comma separated list of search engines. Valid: comet, msgf'
    group: database_search
    help: 'A comma-separated list of search engines to run in parallel on each mzML
      file. Currently supported: comet and msgf (default: comet)

      If more than one search engine is given, results are combined based on posterior
      error probabilities (see the different types

      of estimation procedures under [`--posterior_probabilities`](#--posterior_probabilities)).
      Combination is done with

      [ConsensusID](https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/release/latest/html/TOPP_ConsensusID.html).

      See also its corresponding [`--consensusid_algorithm`](#--consensusid_algorithm)
      parameter for different combination strategies.

      Combinations may profit from an increased [`--num_hits`](#--num_hits) parameter.'
    hidden: false
  proteomicslfq.enzyme:
    description: The enzyme to be used for in-silico digestion, in 'OpenMS format'
    group: database_search
    help: 'Specify which enzymatic restriction should be applied, e.g. ''unspecific
      cleavage'', ''Trypsin'' (default), see OpenMS

      [enzymes](https://github.com/OpenMS/OpenMS/blob/develop/share/OpenMS/CHEMISTRY/Enzymes.xml).
      Note: MSGF does not support extended

      cutting rules, as used by default with `Trypsin`. I.e. if you specify `Trypsin`
      with MSGF, it will be automatically converted to

      `Trypsin/P`= ''Trypsin without proline rule''.'
    hidden: false
  proteomicslfq.num_enzyme_termini:
    description: Specify the amount of termini matching the enzyme cutting rules for
      a peptide to be considered. Valid values are `fully` (default), `semi`, or `none`
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.allowed_missed_cleavages:
    description: Specify the maximum number of allowed missed enzyme cleavages in
      a peptide. The parameter is not applied if `unspecific cleavage` is specified
      as enzyme.
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.precursor_mass_tolerance:
    description: Precursor mass tolerance used for database search. For High-Resolution
      instruments a precursor mass tolerance value of 5 ppm is recommended (i.e. 5).
      See also [`--precursor_mass_tolerance_unit`](#--precursor_mass_tolerance_unit).
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.precursor_mass_tolerance_unit:
    description: Precursor mass tolerance unit used for database search. Possible
      values are 'ppm' (default) and 'Da'.
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.fragment_mass_tolerance:
    description: Fragment mass tolerance used for database search. The default of
      0.03 Da is for high-resolution instruments.
    group: database_search
    help: 'Caution: for Comet we are estimating the `fragment_bin_tolerance` parameter
      based on this automatically.'
    hidden: false
  proteomicslfq.fragment_mass_tolerance_unit:
    description: Fragment mass tolerance unit used for database search. Possible values
      are 'ppm' (default) and 'Da'.
    group: database_search
    help: 'Caution: for Comet we are estimating the `fragment_bin_tolerance` parameter
      based on this automatically.'
    hidden: false
  proteomicslfq.fixed_mods:
    description: A comma-separated list of fixed modifications with their Unimod name
      to be searched during database search
    group: database_search
    help: 'Specify which fixed modifications should be applied to the database search
      (eg. '''' or ''Carbamidomethyl (C)'', see Unimod modifications

      in the style ''({unimod name} ({optional term specificity} {optional origin})'').

      All possible modifications can be found in the restrictions mentioned in the
      command line documentation of e.g. [CometAdapter](https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/release/latest/html/TOPP_CometAdapter.html)
      (scroll down a bit for the complete set).

      Multiple fixed modifications can be specified comma separated (e.g. ''Carbamidomethyl
      (C),Oxidation (M)'').

      Fixed modifications need to be found at every matching amino acid for a peptide
      to be reported.'
    hidden: false
  proteomicslfq.variable_mods:
    description: A comma-separated list of variable modifications with their Unimod
      name to be searched during database search
    group: database_search
    help: 'Specify which variable modifications should be applied to the database
      search (eg. '''' or ''Oxidation (M)'', see Unimod modifications

      in the style ''({unimod name} ({optional term specificity} {optional origin})'').

      All possible modifications can be found in the restrictions mentioned in the
      command line documentation of e.g. [CometAdapter](https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/release/latest/html/TOPP_CometAdapter.html)
      (scroll down a bit for the complete set).

      Multiple variable modifications can be specified comma separated (e.g. ''Carbamidomethyl
      (C),Oxidation (M)'').

      Variable modifications may or may not be found at matching amino acids for a
      peptide to be reported.'
    hidden: false
  proteomicslfq.fragment_method:
    description: The fragmentation method used during tandem MS. (MS/MS or MS2).
    group: database_search
    help: Currently unsupported. Defaults to `ALL` for Comet and `from_spectrum`,
      for MSGF. Should be a sensible default for 99% of the cases.
    hidden: true
  proteomicslfq.isotope_error_range:
    description: Comma-separated range of integers with allowed isotope peak errors
      for precursor tolerance (MS-GF+ parameter '-ti'). E.g. -1,2
    group: database_search
    help: Range of integers with allowed isotope peak errors (MS-GF+ parameter '-ti').
      Takes into account the error introduced by choosing a non-monoisotopic peak
      for fragmentation. Combined with 'precursor_mass_tolerance'/'precursor_error_units',
      this determines the actual precursor mass tolerance. E.g. for experimental mass
      'exp' and calculated mass 'calc', '-precursor_mass_tolerance 20 -precursor_error_units
      ppm -isotope_error_range -1,2' tests '|exp - calc - n * 1.00335 Da| < 20 ppm'
      for n = -1, 0, 1, 2.
    hidden: false
  proteomicslfq.instrument:
    description: Type of instrument that generated the data. 'low_res' or 'high_res'
      (default; refers to LCQ and LTQ instruments)
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.protocol:
    description: 'MSGF only: Labeling or enrichment protocol used, if any. Default:
      automatic'
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.min_precursor_charge:
    description: Minimum precursor ion charge. Omit the '+'
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.max_precursor_charge:
    description: Maximum precursor ion charge. Omit the '+'
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.min_peptide_length:
    description: Minimum peptide length to consider (works with MSGF and in newer
      Comet versions)
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.max_peptide_length:
    description: Maximum peptide length to consider (works with MSGF and in newer
      Comet versions)
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.num_hits:
    description: 'Specify the maximum number of top peptide candidates per spectrum
      to be reported by the search engine. Default: 1'
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.max_mods:
    description: Maximum number of modifications per peptide. If this value is large,
      the search may take very long.
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.db_debug:
    description: Debug level when running the database search. Logs become more verbose
      and at '>5' temporary files are kept.
    group: database_search
    help: ''
    hidden: false
  proteomicslfq.enable_mod_localization:
    description: Turn the mechanism on.
    group: modification_localization
    help: ''
    hidden: false
  proteomicslfq.mod_localization:
    description: Which variable modifications to use for scoring their localization.
    group: modification_localization
    help: ''
    hidden: false
  proteomicslfq.luciphor_neutral_losses:
    description: List of neutral losses to consider for mod. localization.
    group: modification_localization
    help: 'List the types of neutral losses that you want to consider. The residue
      field is case sensitive. For example: lower case ''sty'' implies that the neutral
      loss can only occur if the specified modification is present.

      Syntax: ''NL = <RESDIUES> -<NEUTRAL_LOSS_MOLECULAR_FORMULA> <MASS_LOST>''

      (default: ''[sty -H3PO4 -97.97690]'')'
    hidden: true
  proteomicslfq.luciphor_decoy_mass:
    description: How much to add to an amino acid to make it a decoy for mod. localization.
    group: modification_localization
    help: ''
    hidden: true
  proteomicslfq.luciphor_decoy_neutral_losses:
    description: List of neutral losses to consider for mod. localization from an
      internally generated decoy sequence.
    group: modification_localization
    help: 'For handling the neutral loss from a decoy sequence. The syntax for this
      is identical to that of the normal neutral losses given above except that the
      residue is always ''X''. Syntax: DECOY_NL = X -<NEUTRAL_LOSS_MOLECULAR_FORMULA>
      <MASS_LOST> (default: ''[X -H3PO4 -97.97690]'')'
    hidden: true
  proteomicslfq.luciphor_debug:
    description: Debug level for Luciphor step. Increase for verbose logging and keeping
      temp files.
    group: modification_localization
    help: ''
    hidden: true
  proteomicslfq.allow_unmatched:
    description: Do not fail if there are some unmatched peptides. Only activate as
      last resort, if you know that the rest of your settings are fine!
    group: peptide_re_indexing
    help: ''
    hidden: false
  proteomicslfq.IL_equivalent:
    description: 'Should isoleucine and leucine be treated interchangeably when mapping
      search engine hits to the database? Default: true'
    group: peptide_re_indexing
    help: ''
    hidden: false
  proteomicslfq.posterior_probabilities:
    description: "How to calculate posterior probabilities for PSMs:\n\n* 'percolator'\
      \ = Re-score based on PSM-feature-based SVM and transform distance\n    to hyperplane\
      \ for posteriors\n* 'fit_distributions' = Fit positive and negative distributions\
      \ to scores\n    (similar to PeptideProphet)"
    group: psm_re_scoring__general_
    help: ''
    hidden: false
  proteomicslfq.psm_pep_fdr_cutoff:
    description: FDR cutoff on PSM level (or potential peptide level; see Percolator
      options) before going into feature finding, map alignment and inference.
    group: psm_re_scoring__general_
    help: ''
    hidden: false
  proteomicslfq.pp_debug:
    description: Debug level when running the re-scoring. Logs become more verbose
      and at '>5' temporary files are kept.
    group: psm_re_scoring__general_
    help: ''
    hidden: false
  proteomicslfq.FDR_level:
    description: Calculate FDR on PSM ('psm-level-fdrs') or peptide level ('peptide-level-fdrs')?
    group: psm_re_scoring__percolator_
    help: ''
    hidden: false
  proteomicslfq.train_FDR:
    description: The FDR cutoff to be used during training of the SVM.
    group: psm_re_scoring__percolator_
    help: ''
    hidden: false
  proteomicslfq.test_FDR:
    description: The FDR cutoff to be used during testing of the SVM.
    group: psm_re_scoring__percolator_
    help: ''
    hidden: false
  proteomicslfq.subset_max_train:
    description: 'Only train an SVM on a subset of PSMs, and use the resulting score
      vector to evaluate the other PSMs. Recommended when analyzing huge numbers (>1
      million) of PSMs. When set to 0, all PSMs are used for training as normal. This
      is a runtime vs. discriminability tradeoff. Default: 300,000'
    group: psm_re_scoring__percolator_
    help: ''
    hidden: false
  proteomicslfq.klammer:
    description: 'Retention time features are calculated as in Klammer et al. instead
      of with Elude. Default: false'
    group: psm_re_scoring__percolator_
    help: ''
    hidden: true
  proteomicslfq.description_correct_features:
    description: 'Use additional features whose values are learnt by correct entries.
      See help text. Default: 0 = none'
    group: psm_re_scoring__percolator_
    help: 'Percolator provides the possibility to use so called description of correct
      features, i.e. features for which desirable values are learnt from the previously
      identified target PSMs. The absolute value of the difference between desired
      value and observed value is then used as predictive features.


      1 -> iso-electric point


      2 -> mass calibration


      4 -> retention time


      8 -> `delta_retention_time * delta_mass_calibration`'
    hidden: false
  proteomicslfq.outlier_handling:
    description: 'How to handle outliers during fitting:


      * ignore_iqr_outliers (default): ignore outliers outside of `3*IQR` from Q1/Q3
      for fitting

      * set_iqr_to_closest_valid: set IQR-based outliers to the last valid value for
      fitting

      * ignore_extreme_percentiles: ignore everything outside 99th and 1st percentile
      (also removes equal values like potential censored max values in XTandem)

      * none: do nothing'
    group: psm_re_scoring__distribution_fitting_
    help: ''
    hidden: false
  proteomicslfq.consensusid_algorithm:
    description: 'How to combine the probabilities from the single search engines:
      best, combine using a sequence similarity-matrix (PEPMatrix), combine using
      shared ion count of peptides (PEPIons). See help for further info.'
    group: consensus_id
    help: 'Specifies how search engine results are combined: ConsensusID offers several
      algorithms that can aggregate results from multiple peptide identification engines
      (''search engines'') into consensus identifications - typically one per MS2
      spectrum. This works especially well for search engines that provide more than
      one peptide hit per spectrum, i.e. that report not just the best hit, but also
      a list of runner-up candidates with corresponding scores.


      The available algorithms are:


      * PEPMatrix: Scoring based on posterior error probabilities (PEPs) and peptide
      sequence similarities. This algorithm uses a substitution matrix to score the
      similarity of sequences not listed by all search engines. It requires PEPs as
      the scores for all peptide hits.

      * PEPIons: Scoring based on posterior error probabilities (PEPs) and fragment
      ion similarities (''shared peak count''). This algorithm, too, requires PEPs
      as scores.

      * best: For each peptide ID, this uses the best score of any search engine as
      the consensus score.

      * worst: For each peptide ID, this uses the worst score of any search engine
      as the consensus score.

      * average: For each peptide ID, this uses the average score of all search engines
      as the consensus score.

      * ranks: Calculates a consensus score based on the ranks of peptide IDs in the
      results of different search engines. The final score is in the range (0, 1],
      with 1 being the best score.


      To make scores comparable, for best, worst and average, PEPs are used as well.
      Peptide IDs are only considered the same if they map to exactly the same sequence
      (including modifications and their localization). Also isobaric aminoacids are
      (for now) only considered equal with the PEPMatrix/PEPIons algorithms.'
    hidden: false
  proteomicslfq.consensusid_considered_top_hits:
    description: 'Only use the top N hits per search engine and spectrum for combination.
      Default: 0 = all'
    group: consensus_id
    help: Limits the number of alternative peptide hits considered per spectrum/feature
      for each identification run. This helps to reduce runtime, especially for the
      PEPMatrix and PEPIons algorithms, which involve costly 'all vs. all' comparisons
      of peptide hits per spectrum across engines.
    hidden: false
  proteomicslfq.min_consensus_support:
    description: A threshold for the ratio of occurence/similarity scores of a peptide
      in other runs, to be reported. See help.
    group: consensus_id
    help: 'This allows filtering of peptide hits based on agreement between search
      engines. Every peptide sequence in the analysis has been identified by at least
      one search run. This parameter defines which fraction (between 0 and 1) of the
      remaining search runs must ''support'' a peptide identification that should
      be kept. The meaning of ''support'' differs slightly between algorithms: For
      best, worst, average and rank, each search run supports peptides that it has
      also identified among its top `consensusid_considered_top_hits` candidates.
      So `min_consensus_support` simply gives the fraction of additional search engines
      that must have identified a peptide. (For example, if there are three search
      runs, and only peptides identified by at least two of them should be kept, set
      `min_support` to 0.5.) For the similarity-based algorithms PEPMatrix and PEPIons,
      the ''support'' for a peptide is the average similarity of the most-similar
      peptide from each (other) search run. (In the context of the JPR publication,
      this is the average of the similarity scores used in the consensus score calculation
      for a peptide.) Note: For most of the subsequent algorithms, only the best identification
      per spectrum is used.'
    hidden: false
  proteomicslfq.protein_inference:
    description: The inference method to use. 'aggregation' (default) or 'bayesian'.
    group: protein_inference_
    help: 'Infer proteins through:


      * ''aggregation''  =  aggregates all peptide scores across a protein (by calculating
      the maximum) (default)

      * ''bayesian''        =  compute a posterior probability for every protein based
      on a Bayesian network (i.e. using Epifany)

      * (''percolator'' not yet supported)


      **Note:** If protein grouping is performed also depends on the `protein_quant`
      parameter (i.e. if peptides have to be unique or unique to a group only)'
    hidden: false
  proteomicslfq.protein_level_fdr_cutoff:
    description: 'The experiment-wide protein (group)-level FDR cutoff. Default: 0.05'
    group: protein_inference_
    help: This can be protein level if 'strictly_unique_peptides' are used for protein
      quantification. See [`--protein_quant`](#params_protein_quant)
    hidden: false
  proteomicslfq.protein_quant:
    description: 'Quantify proteins based on:


      * ''unique_peptides'' = use peptides mapping to single proteins or a group of
      indistinguishable proteins (according to the set of experimentally identified
      peptides)

      * ''strictly_unique_peptides'' = use peptides mapping to a unique single protein
      only

      * ''shared_peptides'' = use shared peptides, too, but only greedily for its
      best group (by inference score)'
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.quantification_method:
    description: Choose between feature-based quantification based on integrated MS1
      signals ('feature_intensity'; default) or spectral counting of PSMs ('spectral_counting').
      **WARNING:** 'spectral_counting' is not compatible with our MSstats step yet.
      MSstats will therefore be disabled automatically with that choice.
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.mass_recalibration:
    description: 'Recalibrates masses based on precursor mass deviations to correct
      for instrument biases. (default: ''false'')'
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.transfer_ids:
    description: 'Tries a targeted requantification in files where an ID is missing,
      based on aggregate properties (i.e. RT) of the features in other aligned files
      (e.g. ''mean'' of RT). (**WARNING:** increased memory consumption and runtime).
      ''false'' turns this feature off. (default: ''false'')'
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.targeted_only:
    description: 'Only looks for quantifiable features at locations with an identified
      spectrum. Set to false to include unidentified features so they can be linked
      and matched to identified ones (= match between runs). (default: ''true'')'
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.inf_quant_debug:
    description: Debug level when running the re-scoring. Logs become more verbose
      and at '>666' potentially very large temporary files are kept.
    group: protein_quantification
    help: ''
    hidden: false
  proteomicslfq.skip_post_msstats:
    description: Skip MSstats for statistical post-processing?
    group: statistical_post_processing
    help: ''
    hidden: false
  proteomicslfq.ref_condition:
    description: Instead of all pairwise contrasts (default), uses the given condition
      name/number (corresponding to your experimental design) as a reference and creates
      pairwise contrasts against it. (TODO not yet fully implemented)
    group: statistical_post_processing
    help: ''
    hidden: false
  proteomicslfq.contrasts:
    description: Allows full control over contrasts by specifying a set of contrasts
      in a semicolon seperated list of R-compatible contrasts with the condition names/numbers
      as variables (e.g. `1-2;1-3;2-3`). Overwrites '--ref_condition' (TODO not yet
      fully implemented)
    group: statistical_post_processing
    help: ''
    hidden: false
  proteomicslfq.enable_qc:
    description: 'Enable generation of quality control report by PTXQC? default: ''false''
      since it is still unstable'
    group: quality_control
    help: ''
    hidden: false
  proteomicslfq.ptxqc_report_layout:
    description: Specify a yaml file for the report layout (see PTXQC documentation)
      (TODO not yet fully implemented)
    group: quality_control
    help: ''
    hidden: false
parameter_group:
  input_output_options:
    description: Define where the pipeline should find input data and save output
      data.
    help: null
    title: Input/output options
  generic_options:
    description: Less common options for the pipeline, typically set in a config file.
    help: 'These options are common to all nf-core pipelines and allow you to customise
      some of the core preferences for how the pipeline runs.


      Typically these options would be set in a Nextflow config file loaded for all
      pipeline runs, such as `~/.nextflow/config`.'
    title: Generic options
  max_job_request_options:
    description: Set the top limit for requested resources for any single job.
    help: 'If you are running on a smaller system, a pipeline step requesting more
      resources than are available may cause the Nextflow to stop the run with an
      error. These options allow you to cap the maximum resources requested by any
      single job so that the pipeline will run on your system.


      Note that you can not _increase_ the resources requested by any job using these
      options. For that you will need your own configuration file. See [the nf-core
      website](https://nf-co.re/usage/configuration) for details.'
    title: Max job request options
  institutional_config_options:
    description: Parameters used to describe centralised config profiles. These should
      not be edited.
    help: The centralised nf-core configuration profiles use a handful of pipeline
      parameters to describe themselves. This information is then printed to the Nextflow
      log when you run a pipeline. You should not need to change these values when
      you run a pipeline.
    title: Institutional config options
  main_parameters__sdrf_:
    description: In case your input was an SDRF files, the following optional parameters
      can be set.
    help: null
    title: Main parameters (SDRF)
  main_parameters__spectra_files_:
    description: In case your input was a globbing pattern to spectrum files in Thermo
      RAW or mzML format you can specify a manual OpenMS-style experimental design
      file here.
    help: null
    title: Main parameters (spectra files)
  protein_database:
    description: Settings that relate to the mandatory protein database and the optional
      generation of decoy entries.
    help: null
    title: Protein database
  spectrum_preprocessing:
    description: In case you start from profile mode mzMLs or the internal preprocessing
      during conversion with the ThermoRawFileParser fails (e.g. due to new instrument
      types), preprocessing has to be performed with OpenMS. Use this section to configure.
    help: null
    title: Spectrum preprocessing
  database_search:
    description: ''
    help: null
    title: Database search
  modification_localization:
    description: Settings for calculating a localization probability with LucXor for
      modifications with multiple candidate amino acids in a peptide.
    help: null
    title: Modification localization
  peptide_re_indexing:
    description: ''
    help: null
    title: Peptide re-indexing
  psm_re_scoring__general_:
    description: Choose between different rescoring/posterior probability calculation
      methods and set them up.
    help: null
    title: PSM re-scoring (general)
  psm_re_scoring__percolator_:
    description: 'In the following you can find help for the Percolator specific options
      that are only used if [`--posterior_probabilities`](#--posterior_probabilities)
      was set to ''percolator''.

      Note that there are currently some restrictions to the original options of Percolator:


      * no Percolator protein FDR possible (currently OpenMS'' FDR is used on protein
      level)

      * no support for separate target and decoy databases (i.e. no min-max q-value
      calculation or target-decoy competition strategy)

      * no support for combined or experiment-wide peptide re-scoring. Currently search
      results per input file are submitted to Percolator independently.'
    help: null
    title: PSM re-scoring (Percolator)
  psm_re_scoring__distribution_fitting_:
    description: Use this instead of Percolator if there are problems with Percolator
      (e.g. due to bad separation) or for performance
    help: null
    title: PSM re-scoring (distribution fitting)
  consensus_id:
    description: ''
    help: null
    title: Consensus ID
  protein_inference_:
    description: To group proteins, calculate scores on the protein (group) level
      and to potentially modify associations from peptides to proteins.
    help: null
    title: 'Protein inference '
  protein_quantification:
    description: ''
    help: null
    title: Protein Quantification
  statistical_post_processing:
    description: ''
    help: null
    title: Statistical post-processing
  quality_control:
    description: ''
    help: null
    title: Quality control
